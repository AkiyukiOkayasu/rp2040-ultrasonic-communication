[package]
edition = "2021"
name = "rp2040-ultrasonic-communication"
version = "0.4.0"
license = "MIT OR Apache-2.0"
authors = ["Akiyuki Okayasu <akiyuki.okayasu@gmail.com>"]
repository = "https://github.com/AkiyukiOkayasu/rp2040-ultrasonic-communication"
readme = "README.md"
rust-version = "1.72.0"

[dependencies]
cortex-m = "0.7"
cortex-m-rt = "0.7"
embedded-hal = { version = "0.2.7", features = ["unproven"] }

defmt = "0.3"
defmt-rtt = "0.4"
panic-probe = { version = "0.3", features = ["print-defmt"] }

# We're using a Pico by default on this template
rp-pico = { version = "0.8.0", default-features = false, features = [
    "rt",
    "critical-section-impl",
    "rom-func-cache",
] }
fugit = "0.3.7"
fixed = "1.25.1"
pio = "0.2.1"
pio-proc = "0.2.2"
heapless = "0.8.0"
cic-fixed = "0.5.1"
goertzel_algorithm = "0.1.0"
libm = "0.2.8"

# but you can use any BSP. Uncomment this to use the pro_micro_rp2040 BSP instead
# sparkfun-pro-micro-rp2040 = "0.3"

# If you're not going to use a Board Support Package you'll need these:
# rp2040-hal = { version="0.8", features=["rt", "critical-section-impl"] }
rp2040-boot2 = "0.2.1"

# cargo build/run
[profile.dev]
codegen-units = 1
debug = 2
debug-assertions = true
incremental = false
opt-level = 3
overflow-checks = true

# cargo build/run --release
[profile.release]
codegen-units = 1
debug = 2
debug-assertions = false
incremental = false
lto = 'fat'
opt-level = 3
overflow-checks = false

# do not optimize proc-macro crates = faster builds from scratch
[profile.dev.build-override]
codegen-units = 8
debug = false
debug-assertions = false
opt-level = 0
overflow-checks = false

[profile.release.build-override]
codegen-units = 8
debug = false
debug-assertions = false
opt-level = 0
overflow-checks = false

# cargo test
[profile.test]
codegen-units = 1
debug = 2
debug-assertions = true
incremental = false
opt-level = 3
overflow-checks = true

# cargo test --release
[profile.bench]
codegen-units = 1
debug = 2
debug-assertions = false
incremental = false
lto = 'fat'
opt-level = 3
